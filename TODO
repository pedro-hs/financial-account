add created_by e created_at, update_by, updated_at (model)
    on_destroy (viewset)
    on_update (viewset) para setar updated_by, etc
add validacao somente o usuario pode chamar os servicos de transacao
restful urls
criar campos que podem ser inseridos, mas nao podem ser atualizados
adicionar filtro de data e tipo de transacao na listagem de transacoes
escrever testes para company e account
add password reset
add integracao com front
tornar notificacao e variavel de ambiente de email opcional
internalizar docker-compose do notification


Add features no readme
    Descricao:
    Criar um projeto aonde usuário possa abrir uma conta financeira para pessoa Física e Jurídica.
    1. Criar projeto em Django que contem a modelagem e as APIs
        a. Duas APIs utilizando Django Rest Framework
            i. Abertura de conta
            ii. Efetuar transação débito e crédito, validando saldo na conta
        b. Utilizar autenticação nas APIs por usuário.
        c. Utilizar ORM Django.
        d. Disponibilizar Swagger das APIs.
        e. Criar testes unitários.
        f. Criar Dockerfile para rodar projeto em container.
        g. Utilizar PostgreSQL como banco de dados.
        h. Efetuar Logs.
        i. Disponibilizar colleciton postman para testes.
    2. Criar projeto separado em python para notificações, toda transação de débito ou crédito devem ser notificada ao cliente por e -mail.
        a. A comunicação entre os projetos podem ser por mensageria (rabbit, kafka, etc) ou API Rest.
        b. Criar testes unitários.
        c. Efetuar logs.
        d. Disponibilizar collection postman para testes.
